---
title: "Genomic prediction for quantitative traits"
authors: "E. Tourrette, T. Flutre, B. Servin"
format:
  html:
    toc: true
    toc-depth: 2
    toc-location: left
    number-sections: true
editor: visual
---


# Preamble

Set the paths:
```{r}
projectName <- "QLife2025"
projectDir <- ""
if(Sys.info()["user"] == "tflutre"){
  projectDir <- file.path("~/Bureau/quick/", projectName)
} else if(Sys.info()["user"] == "eliset"){
  projectDir <- file.path("~/Desktop/qlife_2025")
}
projectDir <- path.expand(projectDir)
stopifnot(dir.exists(projectDir))
```

Load the dependencies:
```{r}
suppressPackageStartupMessages(library(Matrix))
suppressPackageStartupMessages(library(kinship2))
suppressPackageStartupMessages(library(sommer))
suppressPackageStartupMessages(library(rrBLUP))
```



# Main objective

In the goal of understanding the genetic determinism of complex traits, this session will show how to answer the question "how to replace pedigree-based kinship with SNP-based kinship?".




# Reminder of quantitative genetics without markers

Genetics is the study of heritable variation and the goals of quantitative genetics are to (i) partition phenotypic variance into genetic vs. environmental components, (ii) predict genotypic values based on the resemblance between relatives, and (iii) find the underlying loci contributing to the genetic variance and values.
See the book from Lynch and Walsh (1998).

Concerning the first goal, the phenotypic value of any individual for a given trait, $P$, is partitioned into the **genotypic value**, $G$, and an environmental deviation, $E$.
The genotypic value is defined as the expectation of the phenotypic value over all possible environments: $G = Exp[P]$, whereas $E$ is interpreted as analogous to a residual error.
In the absence of genotype-environment covariance, the squared correlation coefficient between $G$ and $P$, called the **broad-sense heritability** $H^2$, equals the proportion of phenotypic variance that is of genetic origin: $H^2 = \sigma_G^2 / \sigma_P^2$.

Furthermore, the genotypic value consists in the genetic effects of all causal loci on the trait.
Assuming a single biallelic QTL for the trait, its additive **gene action** is defined as $a := (G_{22} - G_{11}) / 2$, with $G_{11}=-a$ and $G_{22}=+a$, and the dominance one as $d := G_{12} - (G_{11}+G_{22})/2$.

Under sexual reproduction (on which we focus here), a key insight is that a parent only transmits to its offsprings a single allele at each QTL, not its whole genotype.
The genotypic value of an individual can hence be partitioned into a part that can be transmitted to offsprings and a part that cannot.
However, when many QTLs are involved, they usually do not act additively, that is, the genetic effects at a locus depend on the genotypes at other locus, these gene interactions being known as *epistasis*.
As a result, $G$ can be a very complicated function of genetic effects.
To solve this, Fisher searched for the best linear approximation of a genotypic value by regressing it on gene contents.

Assuming a population of diploid individuals at Hardy-Weinberg equilibrium (HWE), and a single biallelic QTL, the alleles are noted $A_1$ and $A_2$, the reference allele is arbitrarily chosen as being $A_2$, the frequency of the reference allele is noted $f$, and the gene content, $N_k$, is the number of copies of allele $k$ for a given genotype.
The linear regression on the gene content of the reference allele hence is: $G_{kl} = \mu + \alpha N_2 + \delta_{kl}$.
The slope is called the **substitution effect**: $\alpha = a + (1 - 2 f) d$ under HWE.

Note that the gene actions do not depend on allele frequencies, that is, they can be defined regardless of the allele frequencies in the population under study.
As such, the genotypic values expressed only in terms of gene actions, are sometimes called "physiological", "functional" or also "biological", which is in contrast with the substitution effect that does depend on the allele frequency, and hence is said to be "populational" or also "statistical" ([Alvarez-Castro and Carlborg, 2007](http://dx.doi.org/10.1534/genetics.106.067348); [Vitezica et al, 2013](http://www.genetics.org/content/206/3/1297)).
To avoid confusion, some authors use the term "genotypic value" for the functional case and the term "genetic value" for the populational case.

The part of the genotypic value that can be transmitted to offsprings is called the **additive genetic value**.
In the case of a single QTL, it equals: $G_{kl,A} := \alpha_k + \alpha_l$, where $\alpha_k$ is the partial regression coefficient of $G_{kl}$ on $N_k$.
The additive genetic value is also called the **breeding value** defined as twice the expected deviation of the mean phenotype of an individual's progeny from population mean when mated at random to other individuals from the population: $BV = 2 \times Exp[P_{offspring} - \mu]$.
The breeding value of an individual hence quantifies its value as a parent.

The **additive genetic variance** is then defined as the variance of the additive genetic values.
In the case of a single QTL, it equals: $\sigma_A^2 := 2 f (1 - f) \alpha^2$ under HWE.
Note that this variance is population-specific since it depends on the allele frequency and, because it depends on $\alpha$ that itself depends on both $a$ and $d$, the relative magnitude of genetic variances does not reflect the relative importance of gene actions ([Huang and Mackay, 2016](http://dx.plos.org/10.1371/journal.pgen.1006421)).

Two individuals are considered genetically identical for a given trait, that is, they have the same genotypic value, if they have the same genotypes at the QTLs for that trait.
In other words, what counts for two individuals to be genetically identical is if they have alleles that are **identical by states** (IBS) at causal genes.
But these genes are usually unknown (at least here).
Still, related individuals are more likely to be genetically similar because they are more likely to have inherited the same alleles at the QTLs.
Two alleles will be **identical by descent** (IBD) if they come from the exact same allele in an ancestor some generations ago.

To quantify this, the **coancestry coefficient** between individuals $i$ and $j$, noted $\phi_{A,ij}$, is the probability that one allele taken at random from each genotype are IBD.
It can then be shown that the covariance between the additive genetic values of both individuals equals twice the product of the coancestry coefficient with the additive genetic variance: $\sigma_{A,ij} = 2 \, \phi_{A,ij} \, \sigma_A^2$.
When the causal genes are unknown (most of the cases), the resemblance between relatives can be used to predict the breeding values.

Concretely, this requires to phenotype individuals from multiple generations for which we know the parentage relationships encoded into a **pedigree**.
The founders of the pedigree, assumed unrelated, form the **base population**, and the additive genetic variance will correspond to the variance of their additive genetic values.
Efficient algorithms exist to compute coancestry coefficients, and all pairwise **additive genetic relationships** are gathered into a matrix usually noted $A$ and called the numerator relationship matrix.

TODO: DL

TODO: LMM

TODO: genotypes as random and genetic effects as fixed


# Quantitative genetics with markers

TODO

In this part we are interested in decomposing the overall phenotypic variance in several components, notably the genetic variance and, more specifically, the additive genetic variance.
How can it be estimated, and which improvements do markers provide?
This part is heavily inspired by [Toro et al (2011)](http://www.gsejournal.org/content/43/1/27), [Legarra (2016)](http://dx.doi.org/10.1016/j.tpb.2015.08.005) and [Schreck et al (2019)](https://academic.oup.com/genetics/article/213/2/379/5930631).

TODO: explain really what $\sigma_u^2$ is, as trace of cov(ui,uj) (see Schreck et al 2019)

```{r}
knitr::knit_exit()
```


# Run the simulation

In this tutorial, we will play with two simulate data sets.

TODO: describe them

```{r}
## TODO
```



# Load all the data

## Pedigree

```{r}
inF <- file.path(projectDir, "simulations", "example_data", "pedigree.txt")
stopifnot(file.exists(inF))
pedDat <- read.table(inF, header=TRUE, sep=" ", stringsAsFactors=FALSE)
str(pedDat)
```

## SNP genotypes

```{r}
inF <- file.path(projectDir, "simulations", "example_data", "genotype.txt")
stopifnot(file.exists(inF))
genos <- read.table(inF, header=TRUE, sep="\t", stringsAsFactors=FALSE, row.names=1)
rownames(genos) <- as.character(genos[,1])
genos <- as.matrix(genos[,-1])
stopifnot(all(genos >= 0 & genos <= 2))
str(genos)
genos[1:3, 1:6]
```

Allele frequencies:
```{r}
AFs <- colMeans(genos) / 2
hist(AFs)
```

## Lineages

```{r}
inF <- file.path(projectDir, "simulations", "example_data", "IBD.txt")
stopifnot(file.exists(inF))
IBDs <- read.table(inF, header=FALSE, sep="\t", stringsAsFactors=FALSE)
str(IBDs, list.len=6)
IBDs[1:3, 1:6]
```

## SNP effects

```{r}
inF <- file.path(projectDir, "simulations", "example_data", "beta.txt")
stopifnot(file.exists(inF))
betas <- read.table(inF, header=FALSE, sep="\t")
str(betas)
head(betas)
```




# Estimate the (additive) genetic (co)variances

## True IBD relationships

TODO

```{r}

```

## Expected IBD relationships from the pedigree

Reformat the input data into a specific object with the `kinship2` package:
```{r}
ped <- pedigree(id=pedDat$ind_id,
                dadid=pedDat$father_id,
                momid=pedDat$mother_id,
                sex=pedDat$sex)
ped
```

Plot:
```{r, fig.width=10}
if(FALSE){
  plot(ped)
}
```

Estimate the expected IBD, the `kinship` function using a recursive algorithm described in Lange (1997):
```{r}
A <- 2 * kinship(ped)
dim(A)
```

Plot:
```{r, fig.width=10}
image(as(A, "Matrix"), main="A (pedigree)")
hist(diag(A))
hist(A[upper.tri(A)])
```

## Realized relationships assuming HWE and no DL

### First estimator from VanRaden (2008)

VanRaden P. 2008. Efficient methods to compute genomic predictions. Journal of Dairy Science. 91(11):4414–4423. doi:10.3168/jds.2007-0980.

TODO: compute on generation 0 and on the whole pop

```{r}
tmp <- matrix(rep(1, nrow(genos))) %*% (2 * AFs)
Z <- genos - tmp
rm(tmp)
GRM_vr <- tcrossprod(Z, Z) / (2 * sum(AFs * (1 - AFs)))
```

Plot:
```{r, fig.width=10}
image(as(GRM_vr, "Matrix"), main="GRM (Van Raden)")
hist(diag(GRM_vr))
hist(GRM_vr[upper.tri(GRM_vr)])
```

### Second estimator from VanRaden (2008)

VanRaden P. 2008. Efficient methods to compute genomic predictions. Journal of Dairy Science. 91(11):4414–4423. doi:10.3168/jds.2007-0980.

```{r}
## TODO
```

### Estimator from Yang et al (2010)

Yang J, Benyamin B, McEvoy B, Gordon S, Henders A, Nyholt D, Madden P, Heath A, Martin N, Montgomery G, et al. 2010. Common SNPs explain a large proportion of the heritability for human height. Nature genetics. 42(7):565–569. doi:10.1038/ng.608.

Similar to the 2nd estimator from Van Raden (2008).

## Estimator from Astle-Balding

Astle W, Balding D. 2009. Population structure and cryptic relatedness in genetic association studies. Statistical Science. 24(4):451–471. doi:10.1214/09-sts307.

## LDAK estimator

Speed D, Balding D. 2014. MultiBLUP: improved SNP-based prediction for complex traits. Genome Research. 24(9):1550–1557. doi:10.1101/gr.169375.113.

Speed D, Hemani G, Johnson M, Balding D. 2012. Improved heritability estimation from genome-wide SNPs. American journal of human genetics. 91(6):1011–1021. doi:10.1016/j.ajhg.2012.10.010.

```{r}
## TODO
```

## Estimator from Schreck et al

Schreck N, Piepho H-P, Schlather M. 2019. Best Prediction of the Additive Genomic Variance in Random-Effects Models. Genetics. 213(2):379–394. doi:10.1534/genetics.119.302324.

```{r}
## TODO
```

## Compare additive relationships

```{r}

```

## Estimate variance components

\begin{align}
\boldsymbol{y} = X \boldsymbol{\beta} + Z \boldsymbol{u} + \boldsymbol{\epsilon}
\end{align}

```{r}
hist(pedDat$phenotype)
plot(pedDat$breeding_value, pedDat$phenotype)

```


<!-- ==================================================================== -->

# Predict the breeding values of non-phenotyped individuals

TODO: compare estimates of SNP effects ($\hat{\beta}$) with true effects

```{r}

```


# Appendix

```{r}
print(sessionInfo(), locale=FALSE)
```
