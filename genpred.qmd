---
title: "Genomic prediction for quantitative traits"
authors: "E. Tourrette, T. Flutre, B. Servin"
format:
  html:
    toc: true
    toc-depth: 2
    toc-location: left
    number-sections: true
editor: visual
---


# Preamble

Set the paths:
```{r}
projectName <- "QLife2025"
projectDir <- ""
if(Sys.info()["user"] == "tflutre"){
  projectDir <- file.path("~/Bureau/quick/", projectName)
} else if(Sys.info()["user"] == "eliset"){
  projectDir <- file.path("~/Desktop/qlife_2025")
}
projectDir <- path.expand(projectDir)
stopifnot(dir.exists(projectDir))
```

Load the dependencies:
```{r}
suppressPackageStartupMessages(library(Matrix))
suppressPackageStartupMessages(library(kinship2))
suppressPackageStartupMessages(library(sommer))
suppressPackageStartupMessages(library(rrBLUP))
```



# Main objective

In the goal of understanding the genetic determinism of complex traits, this session will show how to answer the question "how to replace pedigree-based kinship with SNP-based kinship?".



# Run the simulation

In this tutorial, we will play with two simulate data sets.

TODO: describe them

```{r}
## TODO
```



# Load all the data

## Pedigree

```{r}
inF <- file.path(projectDir, "simulations", "example_data", "pedigree.txt")
stopifnot(file.exists(inF))
pedDat <- read.table(inF, header=FALSE, sep=" ", stringsAsFactors=FALSE,
                     col.names=c("ind_id", "father_id", "mother_id", "sex",
                                 "affection", "generation",
                                 "phenotype", "breeding_value"))
str(pedDat)
```

## SNP genotypes

```{r}
inF <- file.path(projectDir, "simulations", "example_data", "genotype.txt")
stopifnot(file.exists(inF))
genos <- read.table(inF, header=FALSE, sep="\t", stringsAsFactors=FALSE)
rownames(genos) <- as.character(genos[,1])
genos <- as.matrix(genos[,-1])
stopifnot(all(genos >= 0 & genos <= 2))
str(genos)
genos[1:3, 1:6]
```

Allele frequencies:
```{r}
AFs <- colMeans(genos) / 2
hist(AFs)
```

## Lineages

```{r}
inF <- file.path(projectDir, "simulations", "example_data", "IBD.txt")
stopifnot(file.exists(inF))
IBDs <- read.table(inF, header=FALSE, sep="\t", stringsAsFactors=FALSE)
str(IBDs, list.len=6)
IBDs[1:3, 1:6]
```

## SNP effects

```{r}
inF <- file.path(projectDir, "simulations", "example_data", "beta.txt")
stopifnot(file.exists(inF))
betas <- read.table(inF, header=FALSE, sep="\t")
str(betas)
head(betas)
```



# First part: estimate the (additive) genetic (co)variances

In this part we are interested in decomposing the overall phenotypic variance in several components, notably the genetic variance and, more specifically, the additive genetic variance.
How can it be estimated, and which improvements do markers provide?
This part is heavily inspired by [Toro et al (2011)](http://www.gsejournal.org/content/43/1/27), [Legarra (2016)](http://dx.doi.org/10.1016/j.tpb.2015.08.005) and [Schreck et al (2019)](https://academic.oup.com/genetics/article/213/2/379/5930631).

Let us start with a population of $n$ individuals called the "reference population" (we will see later what such a population can be).
Each individual in this population has a genetic value, and the genetic variance is the variance of the genetic values of these individuals.
If each individual can be cloned and phenotyped many times, its total genetic value can be estimated.
Otherwise, if all individuals are mated at random many times, and their offsprings phenotyped, their breeding values can be estimated.
We will focus here on additive genetic values, which correspond to breeding values after ignoring the contribution of additive-additive epistasis.

Two individuals are considered genetically identical for a given trait, i.e., have the same genetic value, if they have the same genotypes at the QTLs for that trait, i.e., the same allele pairs at the causal genes.
Moreover, if individual $i$ is more related to individual $j$ than to individual $k$, we expect $i$ and $j$ to have inherited more alleles in common at the QTLs than $i$ and $k$, and hence to be more likely to have more similar phenotypes than $i$ and $k$.
More formally, each individual has a genetic value, $u_i$, all gathered into the vector $\boldsymbol{u}$, and the relationships between individuals are seen as standardized covariances, such that $Cov(u_i,u_j) = \sigma_u^2 K_{ij}$ where $\sigma_u^2$ is the genetic variance and all $K_{ij}$ are gathered into a matrix $K$ known as the genetic relationship matrix.

Genetic relationships are due to identical-by-state alleles at causal genes.
As these genes are usually unknown (at least here), proxies will be used, such as pedigree and marker relationships.

TODO: explain really what $\sigma_u^2$ is, as trace of cov(ui,uj) (see Schreck et al 2019)

## True IBD relationships

TODO

```{r}

```

## Expected IBD relationships from the pedigree

Reformat the input data into a specific object with the `kinship2` package:
```{r}
ped <- pedigree(id=pedDat$ind_id,
                dadid=pedDat$father_id,
                momid=pedDat$mother_id,
                sex=pedDat$sex)
ped
```

Plot:
```{r, fig.width=10}
if(FALSE){
  plot(ped)
}
```

Estimate the expected IBD, the `kinship` function using a recursive algorithm described in Lange (1997):
```{r}
A <- 2 * kinship(ped)
dim(A)
```

Plot:
```{r, fig.width=10}
image(as(A, "Matrix"), main="A (pedigree)")
hist(diag(A))
hist(A[upper.tri(A)])
```

## Realized relationships assuming HWE and no DL

### First estimator from VanRaden (2008)

VanRaden P. 2008. Efficient methods to compute genomic predictions. Journal of Dairy Science. 91(11):4414–4423. doi:10.3168/jds.2007-0980.

TODO: compute on generation 0 and on the whole pop

```{r}
tmp <- matrix(rep(1, nrow(genos))) %*% (2 * AFs)
Z <- genos - tmp
rm(tmp)
GRM_vr <- tcrossprod(Z, Z) / (2 * sum(AFs * (1 - AFs)))
```

Plot:
```{r, fig.width=10}
image(as(GRM_vr, "Matrix"), main="GRM (Van Raden)")
hist(diag(GRM_vr))
hist(GRM_vr[upper.tri(GRM_vr)])
```

### Second estimator from VanRaden (2008)

VanRaden P. 2008. Efficient methods to compute genomic predictions. Journal of Dairy Science. 91(11):4414–4423. doi:10.3168/jds.2007-0980.

```{r}
## TODO
```

### Estimator from Yang et al (2010)

Yang J, Benyamin B, McEvoy B, Gordon S, Henders A, Nyholt D, Madden P, Heath A, Martin N, Montgomery G, et al. 2010. Common SNPs explain a large proportion of the heritability for human height. Nature genetics. 42(7):565–569. doi:10.1038/ng.608.

Similar to the 2nd estimator from Van Raden (2008).

## Estimator from Astle-Balding

Astle W, Balding D. 2009. Population structure and cryptic relatedness in genetic association studies. Statistical Science. 24(4):451–471. doi:10.1214/09-sts307.

## LDAK estimator

Speed D, Balding D. 2014. MultiBLUP: improved SNP-based prediction for complex traits. Genome Research. 24(9):1550–1557. doi:10.1101/gr.169375.113.

Speed D, Hemani G, Johnson M, Balding D. 2012. Improved heritability estimation from genome-wide SNPs. American journal of human genetics. 91(6):1011–1021. doi:10.1016/j.ajhg.2012.10.010.

```{r}
## TODO
```

## Estimator from Schreck et al

Schreck N, Piepho H-P, Schlather M. 2019. Best Prediction of the Additive Genomic Variance in Random-Effects Models. Genetics. 213(2):379–394. doi:10.1534/genetics.119.302324.

```{r}
## TODO
```

## Compare additive relationships

```{r}

```

## Estimate variance components

\begin{align}
\boldsymbol{y} = X \boldsymbol{\beta} + Z \boldsymbol{u} + \boldsymbol{\epsilon}
\end{align}

```{r}
hist(pedDat$phenotype)
plot(pedDat$breeding_value, pedDat$phenotype)

```


<!-- ==================================================================== -->

# Second part: predict the breeding values of non-phenotyped individuals

TODO: compare estimates of SNP effects ($\hat{\beta}$) with true effects

```{r}

```


# Appendix

```{r}
print(sessionInfo(), locale=FALSE)
```
